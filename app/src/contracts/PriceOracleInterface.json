{
  "contractName": "PriceOracleInterface",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "baseTokenAddress",
          "type": "address"
        },
        {
          "name": "quoteTokenAddress",
          "type": "address"
        }
      ],
      "name": "getRate",
      "outputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"baseTokenAddress\",\"type\":\"address\"},{\"name\":\"quoteTokenAddress\",\"type\":\"address\"}],\"name\":\"getRate\",\"outputs\":[{\"name\":\"numerator\",\"type\":\"uint256\"},{\"name\":\"denominator\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getRate(address,address)\":{\"details\":\"Get the exchange rate between two tokens.\",\"params\":{\"baseTokenAddress\":\"The address of base ERC20 token. ETH has a special address defined in Constants.getEthAddress()\",\"quoteTokenAddress\":\"The address of quote ERC20 token. ETH has a special address defined in Constants.getEthAddress()\"},\"return\":\"The rate expressed as numerator/denominator.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/priceoracle/PriceOracleInterface.sol\":\"PriceOracleInterface\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/priceoracle/PriceOracleInterface.sol\":{\"keccak256\":\"0x5d49d367eabaaa8ef29e29c3fe45a1a69196de43a4c094796bbe2a6235b5d180\",\"urls\":[\"bzzr://604c6ba525470bc1b7670008e866aa9d537a23996b8728e439757a8861f49b92\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\ninterface PriceOracleInterface {\n\n    /**\n     * @dev Get the exchange rate between two tokens.\n     * @param baseTokenAddress The address of base ERC20 token. ETH has a special address defined in Constants.getEthAddress()\n     * @param quoteTokenAddress The address of quote ERC20 token. ETH has a special address defined in Constants.getEthAddress()\n     * @return The rate expressed as numerator/denominator.\n     */\n    function getRate(address baseTokenAddress, address quoteTokenAddress) external view\n        returns (uint256 numerator, uint256 denominator);\n}",
  "sourcePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/priceoracle/PriceOracleInterface.sol",
  "ast": {
    "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/priceoracle/PriceOracleInterface.sol",
    "exportedSymbols": {
      "PriceOracleInterface": [
        6135
      ]
    },
    "id": 6136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6123,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 6135,
        "linearizedBaseContracts": [
          6135
        ],
        "name": "PriceOracleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Get the exchange rate between two tokens.\n@param baseTokenAddress The address of base ERC20 token. ETH has a special address defined in Constants.getEthAddress()\n@param quoteTokenAddress The address of quote ERC20 token. ETH has a special address defined in Constants.getEthAddress()\n@return The rate expressed as numerator/denominator.",
            "id": 6134,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6125,
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "466:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6127,
                  "name": "quoteTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "492:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:53:31"
            },
            "returnParameters": {
              "id": 6133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6130,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "550:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6132,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "569:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:40:31"
            },
            "scope": 6135,
            "src": "449:141:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6136,
        "src": "25:567:31"
      }
    ],
    "src": "0:592:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/priceoracle/PriceOracleInterface.sol",
    "exportedSymbols": {
      "PriceOracleInterface": [
        6135
      ]
    },
    "id": 6136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6123,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 6135,
        "linearizedBaseContracts": [
          6135
        ],
        "name": "PriceOracleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Get the exchange rate between two tokens.\n@param baseTokenAddress The address of base ERC20 token. ETH has a special address defined in Constants.getEthAddress()\n@param quoteTokenAddress The address of quote ERC20 token. ETH has a special address defined in Constants.getEthAddress()\n@return The rate expressed as numerator/denominator.",
            "id": 6134,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6125,
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "466:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6127,
                  "name": "quoteTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "492:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:53:31"
            },
            "returnParameters": {
              "id": 6133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6130,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "550:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6132,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6134,
                  "src": "569:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:40:31"
            },
            "scope": 6135,
            "src": "449:141:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6136,
        "src": "25:567:31"
      }
    ],
    "src": "0:592:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-09T17:01:33.254Z",
  "devdoc": {
    "methods": {
      "getRate(address,address)": {
        "details": "Get the exchange rate between two tokens.",
        "params": {
          "baseTokenAddress": "The address of base ERC20 token. ETH has a special address defined in Constants.getEthAddress()",
          "quoteTokenAddress": "The address of quote ERC20 token. ETH has a special address defined in Constants.getEthAddress()"
        },
        "return": "The rate expressed as numerator/denominator."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}