{
  "contractName": "TokenMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/shengdading/git/nuts-platform-v2/contracts/mock/TokenMock.sol\":\"TokenMock\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/math/SafeMath.sol\":{\"keccak256\":\"0xc7bc4d4d8fe76deca3c46c58aa0e3f81681e1e3fd496ac244de1933c9bb24b84\",\"urls\":[\"bzzr://b4218f86bb0c7a3ed796b5c94eb259c312d269fe8e30fe51186db418f38de885\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/ERC20.sol\":{\"keccak256\":\"0xe203fbc5229cd07bc321f134f8e453c9c519b97a923b9019bdaa4f4d803edc56\",\"urls\":[\"bzzr://d09563bce890ffaeb902d77cad288e39b0563e3df9686e51e640da670b0facc1\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/IERC20.sol\":{\"keccak256\":\"0x91d42285b7d42693d94c54a4805a40ea0aad33eaf11b38f40e2dd0ce494e0fd5\",\"urls\":[\"bzzr://06bf79275ee23aef46bb12b288cc10f20a18515c16cad45e13799862d2548030\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/mock/TokenMock.sol\":{\"keccak256\":\"0x93c908164fdb82cd5fe8e96f71569a091969fb6e37542c8f73d462203bacae21\",\"urls\":[\"bzzr://73aae1c2d77501bf053fee1d9b6c0f81fee6c6502d7ec80acadb88a19aa0acc4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100263364e8d4a5100061002b60201b60201c565b6101ba565b6001600160a01b0382166100a057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6100b98160025461013f60201b6106521790919060201c565b6002556001600160a01b038216600090815260208181526040909120546100e991839061065261013f821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101b357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6107e3806101c96000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d561020b565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610211565b6100b96004803603604081101561013357600080fd5b506001600160a01b038135169060200135610280565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102bc565b6100b96004803603604081101561018557600080fd5b506001600160a01b0381351690602001356102d7565b6100b9600480360360408110156101b157600080fd5b506001600160a01b03813516906020013561032c565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b0381358116916020013516610339565b6000610202338484610364565b50600192915050565b60025490565b600061021e848484610456565b610276843361027185604051806060016040528060288152602001610722602891396001600160a01b038a166000908152600160209081526040808320338452909152902054919063ffffffff6105b816565b610364565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610202918590610271908663ffffffff61065216565b6001600160a01b031660009081526020819052604090205490565b6000610202338461027185604051806060016040528060258152602001610793602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919063ffffffff6105b816565b6000610202338484610456565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ac57604051600160e51b62461bcd02815260040180806020018281038252602481526020018061076f6024913960400191505060405180910390fd5b6001600160a01b0382166103f457604051600160e51b62461bcd0281526004018080602001828103825260228152602001806106da6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661049e57604051600160e51b62461bcd02815260040180806020018281038252602581526020018061074a6025913960400191505060405180910390fd5b6001600160a01b0382166104e657604051600160e51b62461bcd0281526004018080602001828103825260238152602001806106b76023913960400191505060405180910390fd5b610529816040518060600160405280602681526020016106fc602691396001600160a01b038616600090815260208190526040902054919063ffffffff6105b816565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461055e908263ffffffff61065216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561064a57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561060f5781810151838201526020016105f7565b50505050905090810190601f16801561063c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156106af5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a7230582021def58c9cd525225988a845da8a3ece44f7fa631eb9f270b187985531aa5ffa0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d561020b565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610211565b6100b96004803603604081101561013357600080fd5b506001600160a01b038135169060200135610280565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102bc565b6100b96004803603604081101561018557600080fd5b506001600160a01b0381351690602001356102d7565b6100b9600480360360408110156101b157600080fd5b506001600160a01b03813516906020013561032c565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b0381358116916020013516610339565b6000610202338484610364565b50600192915050565b60025490565b600061021e848484610456565b610276843361027185604051806060016040528060288152602001610722602891396001600160a01b038a166000908152600160209081526040808320338452909152902054919063ffffffff6105b816565b610364565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610202918590610271908663ffffffff61065216565b6001600160a01b031660009081526020819052604090205490565b6000610202338461027185604051806060016040528060258152602001610793602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919063ffffffff6105b816565b6000610202338484610456565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ac57604051600160e51b62461bcd02815260040180806020018281038252602481526020018061076f6024913960400191505060405180910390fd5b6001600160a01b0382166103f457604051600160e51b62461bcd0281526004018080602001828103825260228152602001806106da6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661049e57604051600160e51b62461bcd02815260040180806020018281038252602581526020018061074a6025913960400191505060405180910390fd5b6001600160a01b0382166104e657604051600160e51b62461bcd0281526004018080602001828103825260238152602001806106b76023913960400191505060405180910390fd5b610529816040518060600160405280602681526020016106fc602691396001600160a01b038616600090815260208190526040902054919063ffffffff6105b816565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461055e908263ffffffff61065216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561064a57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561060f5781810151838201526020016105f7565b50505050905090810190601f16801561063c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156106af5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a7230582021def58c9cd525225988a845da8a3ece44f7fa631eb9f270b187985531aa5ffa0029",
  "sourceMap": "59:106:58:-;;;93:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;93:70:58;124:32;130:10;142:13;124:5;;;:32;;:::i;:::-;59:106;;6012:302:46;-1:-1:-1;;;;;6087:21:46;;6079:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6170:24;6187:6;6170:12;;:16;;;;;;:24;;;;:::i;:::-;6155:12;:39;-1:-1:-1;;;;;6225:18:46;;:9;:18;;;;;;;;;;;;:30;;6248:6;;6225:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6204:18:46;;:9;:18;;;;;;;;;;;:51;;;;6270:37;;;;;;;6204:18;;:9;;6270:37;;;;;;;;;;6012:302;;:::o;834:176:32:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:32:o;59:106:58:-;;;;;;;",
  "deployedSourceMap": "59:106:58:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:106:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2567:145:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2567:145:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1628:89;;;:::i;:::-;;;;;;;;;;;;;;;;3169:296;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3169:296:46;;;;;;;;;;;;;;;;;:::i;3860:203::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3860:203:46;;;;;;;;:::i;1775:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1775:108:46;-1:-1:-1;;;;;1775:108:46;;:::i;4550:254::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4550:254:46;;;;;;;;:::i;2086:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2086:153:46;;;;;;;;:::i;2297:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2297:132:46;;;;;;;;;;:::i;2567:145::-;2632:4;2648:36;2657:10;2669:7;2678:5;2648:8;:36::i;:::-;-1:-1:-1;2701:4:46;2567:145;;;;:::o;1628:89::-;1698:12;;1628:89;:::o;3169:296::-;3258:4;3274:36;3284:6;3292:9;3303:6;3274:9;:36::i;:::-;3320:117;3329:6;3337:10;3349:87;3385:6;3349:87;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3349:19:46;;;;;;:11;:19;;;;;;;;3369:10;3349:31;;;;;;;;;:87;;:35;:87;:::i;:::-;3320:8;:117::i;:::-;-1:-1:-1;3454:4:46;3169:296;;;;;:::o;3860:203::-;3965:10;3940:4;3986:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3986:32:46;;;;;;;;;;3940:4;;3956:79;;3977:7;;3986:48;;4023:10;3986:48;:36;:48;:::i;1775:108::-;-1:-1:-1;;;;;1858:18:46;1832:7;1858:18;;;;;;;;;;;;1775:108::o;4550:254::-;4635:4;4651:125;4660:10;4672:7;4681:94;4718:15;4681:94;;;;;;;;;;;;;;;;;4693:10;4681:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4681:32:46;;;;;;;;;;;:94;;:36;:94;:::i;2086:153::-;2155:4;2171:40;2181:10;2193:9;2204:6;2171:9;:40::i;2297:132::-;-1:-1:-1;;;;;2395:18:46;;;2369:7;2395:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2297:132::o;7397:329::-;-1:-1:-1;;;;;7489:19:46;;7481:68;;;;-1:-1:-1;;;;;7481:68:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7567:21:46;;7559:68;;;;-1:-1:-1;;;;;7559:68:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7638:18:46;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7688:31;;;;;;;;;;;;;;;;;7397:329;;;:::o;5278:464::-;-1:-1:-1;;;;;5375:20:46;;5367:70;;;;-1:-1:-1;;;;;5367:70:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5455:23:46;;5447:71;;;;-1:-1:-1;;;;;5447:71:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5549;5571:6;5549:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5549:17:46;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5529:17:46;;;:9;:17;;;;;;;;;;;:91;;;;5653:20;;;;;;;:32;;5678:6;5653:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5630:20:46;;;:9;:20;;;;;;;;;;;;:55;;;;5700:35;;;;;;;5630:20;;5700:35;;;;;;;;;;;;;5278:464;;;:::o;1692:187:32:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;;;1797:29:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:32;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:32:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../lib/token/ERC20.sol\";\n\ncontract TokenMock is ERC20 {\n    constructor() public {\n        _mint(msg.sender, 1000000000000);\n    }\n}",
  "sourcePath": "/Users/shengdading/git/nuts-platform-v2/contracts/mock/TokenMock.sol",
  "ast": {
    "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/mock/TokenMock.sol",
    "exportedSymbols": {
      "TokenMock": [
        20405
      ]
    },
    "id": 20406,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20391,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:58"
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/ERC20.sol",
        "file": "../lib/token/ERC20.sol",
        "id": 20392,
        "nodeType": "ImportDirective",
        "scope": 20406,
        "sourceUnit": 19127,
        "src": "25:32:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20393,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19126,
              "src": "81:5:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$19126",
                "typeString": "contract ERC20"
              }
            },
            "id": 20394,
            "nodeType": "InheritanceSpecifier",
            "src": "81:5:58"
          }
        ],
        "contractDependencies": [
          19126,
          19254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20405,
        "linearizedBaseContracts": [
          20405,
          19126,
          19254
        ],
        "name": "TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20403,
              "nodeType": "Block",
              "src": "114:49:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 20398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20935,
                          "src": "130:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "130:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030",
                        "id": 20400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "142:13:58",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "id": 20397,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19010,
                      "src": "124:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "124:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20402,
                  "nodeType": "ExpressionStatement",
                  "src": "124:32:58"
                }
              ]
            },
            "documentation": null,
            "id": 20404,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:2:58"
            },
            "returnParameters": {
              "id": 20396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:58"
            },
            "scope": 20405,
            "src": "93:70:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 20406,
        "src": "59:106:58"
      }
    ],
    "src": "0:165:58"
  },
  "legacyAST": {
    "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/mock/TokenMock.sol",
    "exportedSymbols": {
      "TokenMock": [
        20405
      ]
    },
    "id": 20406,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20391,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:58"
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/ERC20.sol",
        "file": "../lib/token/ERC20.sol",
        "id": 20392,
        "nodeType": "ImportDirective",
        "scope": 20406,
        "sourceUnit": 19127,
        "src": "25:32:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20393,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19126,
              "src": "81:5:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$19126",
                "typeString": "contract ERC20"
              }
            },
            "id": 20394,
            "nodeType": "InheritanceSpecifier",
            "src": "81:5:58"
          }
        ],
        "contractDependencies": [
          19126,
          19254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20405,
        "linearizedBaseContracts": [
          20405,
          19126,
          19254
        ],
        "name": "TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20403,
              "nodeType": "Block",
              "src": "114:49:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 20398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20935,
                          "src": "130:3:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "130:10:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030",
                        "id": 20400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "142:13:58",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "id": 20397,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19010,
                      "src": "124:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "124:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20402,
                  "nodeType": "ExpressionStatement",
                  "src": "124:32:58"
                }
              ]
            },
            "documentation": null,
            "id": 20404,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:2:58"
            },
            "returnParameters": {
              "id": 20396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:58"
            },
            "scope": 20405,
            "src": "93:70:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 20406,
        "src": "59:106:58"
      }
    ],
    "src": "0:165:58"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x4Fe7B1596E569c4bf58744604084d44818Db11F0",
      "transactionHash": "0xc3fdd582098412603bf52a7805569fcae8424aea336005990a110cf493784523"
    },
    "1570661872937": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0xf41a9161dC770834f7dAa89aF703E5DF24d43390",
      "transactionHash": "0xa63c7e93c9b812d499d9239c5c894579528c8485a076d34bd146d0f9595464f6"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-16T00:39:24.216Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}