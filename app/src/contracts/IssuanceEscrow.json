{
  "contractName": "IssuanceEscrow",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokenByAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawByAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "depositByAdmin",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokenByAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getTokenList",
      "outputs": [
        {
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BalanceIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BalanceDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "source",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "source",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenByAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawByAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositByAdmin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositTokenByAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getTokenList\",\"outputs\":[{\"name\":\"tokens\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BalanceIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BalanceDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"depositByAdmin(address)\":{\"details\":\"Deposits ETH from Instrument Manager into an account.\",\"params\":{\"account\":\"The account to deposit ETH.\"}},\"depositTokenByAdmin(address,address,uint256)\":{\"details\":\"Deposits ERC20 tokens from Instrument Manager into an account. Note: The owner, i.e. Instrument Manager must set the allowance before hand.\",\"params\":{\"account\":\"The account to deposit ERC20 tokens.\",\"amount\":\"The amount of ERC20 token to deposit.\",\"token\":\"The ERC20 token to deposit.\"}},\"getBalance(address)\":{\"details\":\"Get the current ETH balance of an account in the escrow.\",\"params\":{\"account\":\"The account to check ETH balance.\"},\"return\":\"Current ETH balance of the account.\"},\"getTokenBalance(address,address)\":{\"details\":\"Get the balance of the requested IERC20 token in the escrow.\",\"params\":{\"account\":\"The address to check IERC20 balance.\",\"token\":\"The IERC20 token to check balance.\"},\"return\":\"The balance of the account.\"},\"getTokenList(address)\":{\"details\":\"Get the list of tokens that are deposited in the escrow.\",\"params\":{\"account\":\"The address to check the deposited token list.\"},\"return\":\"The list of tokens deposited in the escrow.\"},\"initialize(address)\":{\"details\":\"IMPORTANT: Initialization method for all escrows to update the owner. This function must be invoked immediately after creating the proxy and updating implementation. If it's invoked in a separate transaction, it's possible that it's already invoked by someone else.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(address,address,uint256)\":{\"details\":\"Transfers the ownership of ETH in this escrow.\",\"params\":{\"amount\":\"The amount to trasfer.\",\"dest\":\"The account where the tokens are transferred to.\",\"source\":\"The account where the tokens are from.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferToken(address,address,address,uint256)\":{\"details\":\"Transfers the ownership of ERC20 tokens in this escrow.\",\"params\":{\"amount\":\"The amount to trasfer.\",\"dest\":\"The account where the ERC20 tokens are transferred to.\",\"source\":\"The account where the ERC20 tokens are from.\",\"token\":\"The ERC20 tokens to transfer.\"}},\"withdrawByAdmin(address,uint256)\":{\"details\":\"Withdraw ETH from an account to Instrument Manager.\",\"params\":{\"account\":\"The account to withdraw ETH.\",\"amount\":\"The amount of ETH to withdraw.\"}},\"withdrawTokenByAdmin(address,address,uint256)\":{\"details\":\"Withdraw ERC20 token from an account to Instrument Manager. The transfer action is done inside this function.\",\"params\":{\"account\":\"The account to withdraw ERC20 token.\",\"amount\":\"The amount of ERC20 tokens to withdraw.\",\"token\":\"The ERC20 token to withdraw.\"}}},\"title\":\"Issuance Escrow that keeps assets that are locked by issuance.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrow.sol\":\"IssuanceEscrow\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/shengdading/git/nuts-platform-v2/contracts/escrow/EscrowBase.sol\":{\"keccak256\":\"0x86bdbd2d2cfc3e107d577c6838e5a5a349cbde670668cf33fa3867adade01dc3\",\"urls\":[\"bzzr://829ba15ed914baf63bf45cefea52bfb6e38ab00ebcc91bfaa1ed7ef286a85a08\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/escrow/EscrowBaseInterface.sol\":{\"keccak256\":\"0xf94e80cc27169201e401647054dad579321f44a38230d106a521c1b7ba24bd94\",\"urls\":[\"bzzr://447d442a4f30377651be46e6558d63961fd1953da78cc5e9a9989d501922c50d\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrow.sol\":{\"keccak256\":\"0x4b445feff5429e7332208c05303acf54e1edf2c0b9244903887e659ae1ab1311\",\"urls\":[\"bzzr://2bab58a2e7c3ff6478a15ddbeefa9d253d2dc31132f1679130b90e9888b766a8\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrowInterface.sol\":{\"keccak256\":\"0x7372c16bd7c8b820f8706580021799034c92410c472bb78455a6e6473706e09a\",\"urls\":[\"bzzr://e9472bc8642faeb7a06a3bc7aa9543d98c791ad604186c52f67e236e388d0a2b\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/access/Ownable.sol\":{\"keccak256\":\"0x27a2f4b5924b2f5288d9103201191748d3ccb7d7d146629a1d8972f91b48d1cf\",\"urls\":[\"bzzr://c42729c1f15a096781da56bcf4883f392c09679b86dcb9a082fe521d1c51a8af\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/math/SafeMath.sol\":{\"keccak256\":\"0xc7bc4d4d8fe76deca3c46c58aa0e3f81681e1e3fd496ac244de1933c9bb24b84\",\"urls\":[\"bzzr://b4218f86bb0c7a3ed796b5c94eb259c312d269fe8e30fe51186db418f38de885\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/IERC20.sol\":{\"keccak256\":\"0x91d42285b7d42693d94c54a4805a40ea0aad33eaf11b38f40e2dd0ce494e0fd5\",\"urls\":[\"bzzr://06bf79275ee23aef46bb12b288cc10f20a18515c16cad45e13799862d2548030\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/SafeERC20.sol\":{\"keccak256\":\"0x54ef624933dc4bea6ba29c6c74f79f822c0361fdc8af54357879395a235bc96b\",\"urls\":[\"bzzr://288e035234afeb6af266c898bf2c633af9e9d5cdc546226a9d0fb5f60c0adfb0\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/util/Address.sol\":{\"keccak256\":\"0xfbc52a0765744d3be69318c121020034f2df29e79df2e814af3cc58fcb376f09\",\"urls\":[\"bzzr://92d051aad3094db6d542b02f6fa4e18a001779000ab9821def873466f2d6439f\"]},\"/Users/shengdading/git/nuts-platform-v2/contracts/lib/util/Constants.sol\":{\"keccak256\":\"0xb64bd4a52c3486d3e07ade30ef415d86741671069d4705941b7ecc091d0c5d1f\",\"urls\":[\"bzzr://1826daee059312c2d1155786760ecefbfe5dccf85a022a3ee7824758af11191a\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36118ec806100576000396000f3fe6080604052600436106100dd5760003560e01c80638f32d59b1161007f578063c4d66de811610059578063c4d66de814610311578063d8a3073214610344578063f2fde38b146103c7578063f8b2cb4f146103fa576100dd565b80638f32d59b14610258578063beabacc814610281578063c489744b146102c4576100dd565b806370d97c34116100bb57806370d97c34146101a9578063715018a6146101cf578063810c0af8146101e45780638da5cb5b14610227576100dd565b80632c54de4f146100e25780633d4aa9a91461012d578063487c358014610170575b600080fd5b3480156100ee57600080fd5b5061012b6004803603608081101561010557600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561042d565b005b34801561013957600080fd5b5061012b6004803603606081101561015057600080fd5b506001600160a01b03813581169160208101359091169060400135610600565b34801561017c57600080fd5b5061012b6004803603604081101561019357600080fd5b506001600160a01b0381351690602001356107ed565b61012b600480360360208110156101bf57600080fd5b50356001600160a01b0316610988565b3480156101db57600080fd5b5061012b610ab1565b3480156101f057600080fd5b5061012b6004803603606081101561020757600080fd5b506001600160a01b03813581169160208101359091169060400135610b64565b34801561023357600080fd5b5061023c610d02565b604080516001600160a01b039092168252519081900360200190f35b34801561026457600080fd5b5061026d610d11565b604080519115158252519081900360200190f35b34801561028d57600080fd5b5061012b600480360360608110156102a457600080fd5b506001600160a01b03813581169160208101359091169060400135610d22565b3480156102d057600080fd5b506102ff600480360360408110156102e757600080fd5b506001600160a01b0381358116916020013516610d91565b60408051918252519081900360200190f35b34801561031d57600080fd5b5061012b6004803603602081101561033457600080fd5b50356001600160a01b0316610dbc565b34801561035057600080fd5b506103776004803603602081101561036757600080fd5b50356001600160a01b0316610e30565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103b357818101518382015260200161039b565b505050509050019250505060405180910390f35b3480156103d357600080fd5b5061012b600480360360208110156103ea57600080fd5b50356001600160a01b0316611029565b34801561040657600080fd5b506102ff6004803603602081101561041d57600080fd5b50356001600160a01b0316611085565b610435610d11565b6104895760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0384166104d157604051600160e51b62461bcd0281526004018080602001828103825260238152602001806118516023913960400191505060405180910390fd5b6001600160a01b03831661051957604051600160e51b62461bcd02815260040180806020018281038252602181526020018061180e6021913960400191505060405180910390fd5b6001600160a01b03821661056157604051600160e51b62461bcd02815260040180806020018281038252602281526020018061182f6022913960400191505060405180910390fd5b600081116105a357604051600160e51b62461bcd0281526004018080602001828103825260238152602001806118746023913960400191505060405180910390fd5b806105ae8584610d91565b10156105ee57604051600160e51b62461bcd02815260040180806020018281038252602581526020018061179d6025913960400191505060405180910390fd5b6105fa848484846110c6565b50505050565b610608610d11565b61065c5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0383166106ba5760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b6001600160a01b0382166107185760408051600160e51b62461bcd02815260206004820152601e60248201527f457363726f77426173653a20546f6b656e206d757374206265207365742e0000604482015290519081900360640190fd5b600081116107705760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b8061077b8484610d91565b10156107bb57604051600160e51b62461bcd0281526004018080602001828103825260278152602001806117e76027913960400191505060405180910390fd5b6107c68383836110dc565b6107e86107d1610d02565b6001600160a01b038416908363ffffffff61117616565b505050565b6107f5610d11565b6108495760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0382166108a75760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b600081116108ff5760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b8061090983611085565b101561094957604051600160e51b62461bcd0281526004018080602001828103825260258152602001806117c26025913960400191505060405180910390fd5b61095b826109556111f6565b836110dc565b604051339082156108fc029083906000818181858888f193505050501580156107e8573d6000803e3d6000fd5b610990610d11565b6109e45760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b346001600160a01b038216610a435760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b60008111610a9b5760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b610aad82610aa76111f6565b836111fc565b5050565b610ab9610d11565b610b0d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b610b6c610d11565b610bc05760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038316610c1e5760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b6001600160a01b038216610c7c5760408051600160e51b62461bcd02815260206004820152601e60248201527f457363726f77426173653a20546f6b656e206d757374206265207365742e0000604482015290519081900360640190fd5b60008111610cd45760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b610cdf8383836111fc565b6107e8610cea610d02565b6001600160a01b03841690308463ffffffff61130116565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610d2a610d11565b610d7e5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6107e88383610d8b6111f6565b8461042d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610dc6610d02565b6001600160a01b031614610e245760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a20416c726561647920696e697469616c697a65642e604482015290519081900360640190fd5b610e2d81611389565b50565b6001600160a01b0381166000908152600160205260408120606091600290910190610e596111f6565b90506000805b8354811015610eff57826001600160a01b0316848281548110610e7e57fe5b6000918252602090912001546001600160a01b031614801590610eeb57506001600160a01b038616600090815260016020526040812085548290879085908110610ec457fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b15610ef7576001909101905b600101610e5f565b5080604051908082528060200260200182016040528015610f2a578160200160208202803883390190505b5093506000805b845481101561101f57836001600160a01b0316858281548110610f5057fe5b6000918252602090912001546001600160a01b031614801590610fbd57506001600160a01b038716600090815260016020526040812086548290889085908110610f9657fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561101757848181548110610fce57fe5b9060005260206000200160009054906101000a90046001600160a01b0316868381518110610ff857fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610f31565b5050505050919050565b611031610d11565b610e245760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166000908152600160205260408120816110a66111f6565b6001600160a01b0316815260208101919091526040016000205492915050565b6110d18483836110dc565b6105fa8383836111fc565b6001600160a01b038084166000908152600160209081526040808320938616835290839052902054611114908363ffffffff61143916565b6001600160a01b038085166000818152602085815260409182902094909455805192881683529282015280820184905290517f6ac2cd906088d873624fa62ca95170d967629e7d964651df19a3aa2e49b44aa19181900360600190a150505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526107e8908490611482565b60001990565b6001600160a01b038084166000908152600160209081526040808320938616835290839052902054611234908363ffffffff61164316565b6001600160a01b0384166000908152602083815260408083209390935560018401905220546112b1576002810180546001808201835560008381526020808220909301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038916908117909155935493815290840190915260409020555b604080516001600160a01b0380871682528516602082015280820184905290517f0d66f59c9991adc17dd3339490c5058d2d6fe20395e7b55ceb6ca8019a31667d9181900360600190a150505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526105fa908590611482565b6001600160a01b0381166113d157604051600160e51b62461bcd0281526004018080602001828103825260268152602001806117776026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061147b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116a0565b9392505050565b611494826001600160a01b031661173a565b6114e85760408051600160e51b62461bcd02815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106115265780518252601f199092019160209182019101611507565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611588576040519150601f19603f3d011682016040523d82523d6000602084013e61158d565b606091505b5091509150816115e75760408051600160e51b62461bcd02815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156105fa5780806020019051602081101561160357600080fd5b50516105fa57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180611897602a913960400191505060405180910390fd5b60008282018381101561147b5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000818484111561173257604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116f75781810151838201526020016116df565b50505050905090810190601f1680156117245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061176e5750808214155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737349737375616e6365457363726f773a20496e73756666696369656e742062616c616e63652e457363726f77426173653a20496e73756666696369656e74204554482042616c616e63652e457363726f77426173653a20496e73756666696369656e7420546f6b656e2042616c616e63652e49737375616e6365457363726f773a2044657374206d757374206265207365742e49737375616e6365457363726f773a20546f6b656e206d757374206265207365742e49737375616e6365457363726f773a20536f75726365206d757374206265207365742e49737375616e6365457363726f773a20416d6f756e74206d757374206265207365742e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a165627a7a72305820818eccdee5c2996b583a8dc0a6788b490ba6b4fc3ce0738b441cc96ba9aed1140029",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638f32d59b1161007f578063c4d66de811610059578063c4d66de814610311578063d8a3073214610344578063f2fde38b146103c7578063f8b2cb4f146103fa576100dd565b80638f32d59b14610258578063beabacc814610281578063c489744b146102c4576100dd565b806370d97c34116100bb57806370d97c34146101a9578063715018a6146101cf578063810c0af8146101e45780638da5cb5b14610227576100dd565b80632c54de4f146100e25780633d4aa9a91461012d578063487c358014610170575b600080fd5b3480156100ee57600080fd5b5061012b6004803603608081101561010557600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561042d565b005b34801561013957600080fd5b5061012b6004803603606081101561015057600080fd5b506001600160a01b03813581169160208101359091169060400135610600565b34801561017c57600080fd5b5061012b6004803603604081101561019357600080fd5b506001600160a01b0381351690602001356107ed565b61012b600480360360208110156101bf57600080fd5b50356001600160a01b0316610988565b3480156101db57600080fd5b5061012b610ab1565b3480156101f057600080fd5b5061012b6004803603606081101561020757600080fd5b506001600160a01b03813581169160208101359091169060400135610b64565b34801561023357600080fd5b5061023c610d02565b604080516001600160a01b039092168252519081900360200190f35b34801561026457600080fd5b5061026d610d11565b604080519115158252519081900360200190f35b34801561028d57600080fd5b5061012b600480360360608110156102a457600080fd5b506001600160a01b03813581169160208101359091169060400135610d22565b3480156102d057600080fd5b506102ff600480360360408110156102e757600080fd5b506001600160a01b0381358116916020013516610d91565b60408051918252519081900360200190f35b34801561031d57600080fd5b5061012b6004803603602081101561033457600080fd5b50356001600160a01b0316610dbc565b34801561035057600080fd5b506103776004803603602081101561036757600080fd5b50356001600160a01b0316610e30565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103b357818101518382015260200161039b565b505050509050019250505060405180910390f35b3480156103d357600080fd5b5061012b600480360360208110156103ea57600080fd5b50356001600160a01b0316611029565b34801561040657600080fd5b506102ff6004803603602081101561041d57600080fd5b50356001600160a01b0316611085565b610435610d11565b6104895760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0384166104d157604051600160e51b62461bcd0281526004018080602001828103825260238152602001806118516023913960400191505060405180910390fd5b6001600160a01b03831661051957604051600160e51b62461bcd02815260040180806020018281038252602181526020018061180e6021913960400191505060405180910390fd5b6001600160a01b03821661056157604051600160e51b62461bcd02815260040180806020018281038252602281526020018061182f6022913960400191505060405180910390fd5b600081116105a357604051600160e51b62461bcd0281526004018080602001828103825260238152602001806118746023913960400191505060405180910390fd5b806105ae8584610d91565b10156105ee57604051600160e51b62461bcd02815260040180806020018281038252602581526020018061179d6025913960400191505060405180910390fd5b6105fa848484846110c6565b50505050565b610608610d11565b61065c5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0383166106ba5760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b6001600160a01b0382166107185760408051600160e51b62461bcd02815260206004820152601e60248201527f457363726f77426173653a20546f6b656e206d757374206265207365742e0000604482015290519081900360640190fd5b600081116107705760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b8061077b8484610d91565b10156107bb57604051600160e51b62461bcd0281526004018080602001828103825260278152602001806117e76027913960400191505060405180910390fd5b6107c68383836110dc565b6107e86107d1610d02565b6001600160a01b038416908363ffffffff61117616565b505050565b6107f5610d11565b6108495760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0382166108a75760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b600081116108ff5760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b8061090983611085565b101561094957604051600160e51b62461bcd0281526004018080602001828103825260258152602001806117c26025913960400191505060405180910390fd5b61095b826109556111f6565b836110dc565b604051339082156108fc029083906000818181858888f193505050501580156107e8573d6000803e3d6000fd5b610990610d11565b6109e45760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b346001600160a01b038216610a435760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b60008111610a9b5760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b610aad82610aa76111f6565b836111fc565b5050565b610ab9610d11565b610b0d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b610b6c610d11565b610bc05760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038316610c1e5760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a204163636f756e74206d757374206265207365742e604482015290519081900360640190fd5b6001600160a01b038216610c7c5760408051600160e51b62461bcd02815260206004820152601e60248201527f457363726f77426173653a20546f6b656e206d757374206265207365742e0000604482015290519081900360640190fd5b60008111610cd45760408051600160e51b62461bcd02815260206004820152601f60248201527f457363726f77426173653a20416d6f756e74206d757374206265207365742e00604482015290519081900360640190fd5b610cdf8383836111fc565b6107e8610cea610d02565b6001600160a01b03841690308463ffffffff61130116565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610d2a610d11565b610d7e5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6107e88383610d8b6111f6565b8461042d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610dc6610d02565b6001600160a01b031614610e245760408051600160e51b62461bcd02815260206004820181905260248201527f457363726f77426173653a20416c726561647920696e697469616c697a65642e604482015290519081900360640190fd5b610e2d81611389565b50565b6001600160a01b0381166000908152600160205260408120606091600290910190610e596111f6565b90506000805b8354811015610eff57826001600160a01b0316848281548110610e7e57fe5b6000918252602090912001546001600160a01b031614801590610eeb57506001600160a01b038616600090815260016020526040812085548290879085908110610ec457fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b15610ef7576001909101905b600101610e5f565b5080604051908082528060200260200182016040528015610f2a578160200160208202803883390190505b5093506000805b845481101561101f57836001600160a01b0316858281548110610f5057fe5b6000918252602090912001546001600160a01b031614801590610fbd57506001600160a01b038716600090815260016020526040812086548290889085908110610f9657fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561101757848181548110610fce57fe5b9060005260206000200160009054906101000a90046001600160a01b0316868381518110610ff857fe5b6001600160a01b03909216602092830291909101909101526001909101905b600101610f31565b5050505050919050565b611031610d11565b610e245760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166000908152600160205260408120816110a66111f6565b6001600160a01b0316815260208101919091526040016000205492915050565b6110d18483836110dc565b6105fa8383836111fc565b6001600160a01b038084166000908152600160209081526040808320938616835290839052902054611114908363ffffffff61143916565b6001600160a01b038085166000818152602085815260409182902094909455805192881683529282015280820184905290517f6ac2cd906088d873624fa62ca95170d967629e7d964651df19a3aa2e49b44aa19181900360600190a150505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526107e8908490611482565b60001990565b6001600160a01b038084166000908152600160209081526040808320938616835290839052902054611234908363ffffffff61164316565b6001600160a01b0384166000908152602083815260408083209390935560018401905220546112b1576002810180546001808201835560008381526020808220909301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038916908117909155935493815290840190915260409020555b604080516001600160a01b0380871682528516602082015280820184905290517f0d66f59c9991adc17dd3339490c5058d2d6fe20395e7b55ceb6ca8019a31667d9181900360600190a150505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526105fa908590611482565b6001600160a01b0381166113d157604051600160e51b62461bcd0281526004018080602001828103825260268152602001806117776026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061147b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116a0565b9392505050565b611494826001600160a01b031661173a565b6114e85760408051600160e51b62461bcd02815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106115265780518252601f199092019160209182019101611507565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611588576040519150601f19603f3d011682016040523d82523d6000602084013e61158d565b606091505b5091509150816115e75760408051600160e51b62461bcd02815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156105fa5780806020019051602081101561160357600080fd5b50516105fa57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180611897602a913960400191505060405180910390fd5b60008282018381101561147b5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000818484111561173257604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116f75781810151838201526020016116df565b50505050905090810190601f1680156117245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061176e5750808214155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737349737375616e6365457363726f773a20496e73756666696369656e742062616c616e63652e457363726f77426173653a20496e73756666696369656e74204554482042616c616e63652e457363726f77426173653a20496e73756666696369656e7420546f6b656e2042616c616e63652e49737375616e6365457363726f773a2044657374206d757374206265207365742e49737375616e6365457363726f773a20546f6b656e206d757374206265207365742e49737375616e6365457363726f773a20536f75726365206d757374206265207365742e49737375616e6365457363726f773a20416d6f756e74206d757374206265207365742e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a165627a7a72305820818eccdee5c2996b583a8dc0a6788b490ba6b4fc3ce0738b441cc96ba9aed1140029",
  "sourceMap": "244:1376:12:-;;;;;771:6:27;:19;;-1:-1:-1;771:19:27;780:10;771:19;;;;-1:-1:-1;838:6:27;;805:40;;771:6;;805:40;244:1376:12;;;;;;",
  "deployedSourceMap": "244:1376:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:573;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1045:573:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;1045:573:12;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6234:536:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6234:536:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6234:536:6;;;;;;;;;;;;;;;;;:::i;5490:424::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5490:424:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5490:424:6;;-1:-1:-1;;;;;5490:424:6;;;;;;:::i;4197:319::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4197:319:6;-1:-1:-1;;;;;4197:319:6;;:::i;1711:137:27:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1711:137:27;;;:::i;4863:438:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4863:438:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4863:438:6;;;;;;;;;;;;;;;;;:::i;928:77:27:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;928:77:27;;;:::i;:::-;;;;-1:-1:-1;;;;;928:77:27;;;;;;;;;;;;;;1279:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1279:90:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;561:160:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:160:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;561:160:12;;;;;;;;;;;;;;;;;:::i;2639:165:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2639:165:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2639:165:6;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1682:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1682:168:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1682:168:6;-1:-1:-1;;;;;1682:168:6;;:::i;3023:849::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3023:849:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3023:849:6;-1:-1:-1;;;;;3023:849:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3023:849:6;;;;;;;;;;;;;;;;;1997:107:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1997:107:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1997:107:27;-1:-1:-1;;;;;1997:107:27;;:::i;2230:157:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2230:157:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2230:157:6;-1:-1:-1;;;;;2230:157:6;;:::i;1045:573:12:-;1132:9:27;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1164:22:12;;1156:70;;;;-1:-1:-1;;;;;1156:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1244:20:12;;1236:66;;;;-1:-1:-1;;;;;1236:66:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1320:21:12;;1312:68;;;;-1:-1:-1;;;;;1312:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:1;1398:6;:10;1390:58;;;;-1:-1:-1;;;;;1390:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:6;1466:38;1482:6;1497:5;1466:15;:38::i;:::-;:48;;1458:98;;;;-1:-1:-1;;;;;1458:98:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:44;1583:6;1591:4;1597:5;1604:6;1567:15;:44::i;:::-;1045:573;;;;:::o;6234:536:6:-;1132:9:27;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6347:23:6;;6339:68;;;;;-1:-1:-1;;;;;6339:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6425:21:6;;6417:64;;;;;-1:-1:-1;;;;;6417:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;6508:1;6499:6;:10;6491:54;;;;;-1:-1:-1;;;;;6491:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;6606:6;6563:39;6579:7;6595:5;6563:15;:39::i;:::-;:49;;6555:101;;;;-1:-1:-1;;;;;6555:101:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6667:42;6686:7;6695:5;6702:6;6667:18;:42::i;:::-;6720:43;6747:7;:5;:7::i;:::-;-1:-1:-1;;;;;6720:26:6;;;6756:6;6720:26;:43::i;:::-;6234:536;;;:::o;5490:424::-;1132:9:27;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5583:23:6;;5575:68;;;;;-1:-1:-1;;;;;5575:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5670:1;5661:6;:10;5653:54;;;;;-1:-1:-1;;;;;5653:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5748:6;5725:19;5736:7;5725:10;:19::i;:::-;:29;;5717:79;;;;-1:-1:-1;;;;;5717:79:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5807:62;5826:7;5835:25;:23;:25::i;:::-;5862:6;5807:18;:62::i;:::-;5880:27;;:10;;:27;;;;;5900:6;;5880:27;;;;5900:6;5880:10;:27;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;4197:319:6;1132:9:27;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4290:9:6;-1:-1:-1;;;;;4317:23:6;;4309:68;;;;;-1:-1:-1;;;;;4309:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4404:1;4395:6;:10;4387:54;;;;;-1:-1:-1;;;;;4387:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4452:57;4466:7;4475:25;:23;:25::i;:::-;4502:6;4452:13;:57::i;:::-;1188:1:27;4197:319:6;:::o;1711:137:27:-;1132:9;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:1;1793:6;;1772:40;;-1:-1:-1;;;;;1793:6:27;;;;1772:40;;1809:1;;1772:40;1839:1;1822:19;;-1:-1:-1;;1822:19:27;;;1711:137::o;4863:438:6:-;1132:9:27;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4975:23:6;;4967:68;;;;;-1:-1:-1;;;;;4967:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5053:21:6;;5045:64;;;;;-1:-1:-1;;;;;5045:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5136:1;5127:6;:10;5119:54;;;;;-1:-1:-1;;;;;5119:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5184:37;5198:7;5207:5;5214:6;5184:13;:37::i;:::-;5232:62;5263:7;:5;:7::i;:::-;-1:-1:-1;;;;;5232:30:6;;;5280:4;5287:6;5232:30;:62::i;928:77:27:-;966:7;992:6;-1:-1:-1;;;;;992:6:27;;928:77::o;1279:90::-;1319:4;1356:6;-1:-1:-1;;;;;1356:6:27;1342:10;:20;;1279:90::o;561:160:12:-;1132:9:27;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:62:12;666:6;674:4;680:25;:23;:25::i;:::-;707:6;652:13;:62::i;2639:165:6:-;-1:-1:-1;;;;;2742:25:6;;;2716:7;2742:25;;;-1:-1:-1;2742:25:6;;;;;;;;:55;;;;;;;;;;;;;2639:165::o;1682:168::-;1764:3;1745:7;:5;:7::i;:::-;-1:-1:-1;;;;;1745:23:6;;1737:68;;;;;-1:-1:-1;;;;;1737:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:28;1834:8;1815:18;:28::i;:::-;1682:168;:::o;3023:849::-;-1:-1:-1;;;;;3148:25:6;;3118:27;3148:25;;;-1:-1:-1;3148:25:6;;;;;3083:23;;3148:35;;;;;3214:25;:23;:25::i;:::-;3193:46;-1:-1:-1;3249:18:6;;3342:209;3366:16;;3362:20;;3342:209;;;3407:12;;-1:-1:-1;;;;;3407:26:6;;;:9;;3417:1;;3407:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3407:12:6;:26;;;;:87;;-1:-1:-1;;;;;;3437:25:6;;3493:1;3437:25;;;-1:-1:-1;3437:25:6;;;;;3477:12;;3493:1;;3477:12;;3487:1;;3477:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3477:12:6;3437:53;;;;;;;;;;;;;:57;3407:87;3403:138;;;3514:12;;;;;3403:138;3384:3;;3342:209;;;;3583:10;3569:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3569:25:6;-1:-1:-1;3560:34:6;-1:-1:-1;3604:9:6;;3627:239;3648:16;;3644:20;;3627:239;;;3689:12;;-1:-1:-1;;;;;3689:26:6;;;:9;;3699:1;;3689:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3689:12:6;:26;;;;:87;;-1:-1:-1;;;;;;3719:25:6;;3775:1;3719:25;;;-1:-1:-1;3719:25:6;;;;;3759:12;;3775:1;;3759:12;;3769:1;;3759:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3759:12:6;3719:53;;;;;;;;;;;;;:57;3689:87;3685:171;;;3808:9;3818:1;3808:12;;;;;;;;;;;;;;;;;;3796:9;;-1:-1:-1;;;;;3808:12:6;;;;3796:6;;3803:1;;3796:9;;;;;;-1:-1:-1;;;;;3796:24:6;;;;:9;;;;;;;;;;;:24;-1:-1:-1;3838:3:6;;;;;3685:171;3666:3;;3627:239;;;;3023:849;;;;;;;:::o;1997:107:27:-;1132:9;:7;:9::i;:::-;1124:54;;;;;-1:-1:-1;;;;;1124:54:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:157:6;-1:-1:-1;;;;;2314:25:6;;2288:7;2314:25;;;-1:-1:-1;2314:25:6;;;;;2288:7;2354:25;:23;:25::i;:::-;-1:-1:-1;;;;;2314:66:6;;;;;;;;;;;;-1:-1:-1;2314:66:6;;;;-1:-1:-1;;2230:157:6:o;8642:197::-;8747:41;8766:6;8774:5;8781:6;8747:18;:41::i;:::-;8798:34;8812:4;8818:5;8825:6;8798:13;:34::i;8027:318::-;-1:-1:-1;;;;;8162:25:6;;;8122:37;8162:25;;;-1:-1:-1;8162:25:6;;;;;;;;8235:35;;;;;;;;;;;;:47;;8275:6;8235:39;:47::i;:::-;-1:-1:-1;;;;;8197:35:6;;;:28;:35;;;;;;;;;;;;:85;;;;8298:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8027:318;;;;:::o;769:174:48:-;877:58;;;-1:-1:-1;;;;;877:58:48;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;877:58:48;;;;;;;;25:18:-1;;61:17;;877:58:48;182:15:-1;900:23:48;179:29:-1;160:49;;851:85:48;;870:5;;851:18;:85::i;122:92:50:-;-1:-1:-1;;;122:92:50:o;7212:568:6:-;-1:-1:-1;;;;;7342:25:6;;;7302:37;7342:25;;;-1:-1:-1;7342:25:6;;;;;;;;7415:35;;;;;;;;;;;;:47;;7455:6;7415:39;:47::i;:::-;-1:-1:-1;;;;;7377:35:6;;:28;:35;;;;;;;;;;;:85;;;;-1:-1:-1;7534:27:6;;:34;;;;7530:188;;7589:24;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;7589:36:6;;;;;;;;;;;;-1:-1:-1;;7589:36:6;-1:-1:-1;;;;;7589:36:6;;;;;;;;7676:31;;7639:34;;;:27;;;:34;;;;;;:68;7530:188;7733:40;;;-1:-1:-1;;;;;7733:40:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;7212:568;;;;:::o;949:202:48:-;1075:68;;;-1:-1:-1;;;;;1075:68:48;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1075:68:48;;;;;;;;25:18:-1;;61:17;;1075:68:48;182:15:-1;1098:27:48;179:29:-1;160:49;;1049:95:48;;1068:5;;1049:18;:95::i;2205:225:27:-;-1:-1:-1;;;;;2278:22:27;;2270:73;;;;-1:-1:-1;;;;;2270:73:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2379:6;;;2358:38;;-1:-1:-1;;;;;2358:38:27;;;;2379:6;;;2358:38;;;2406:6;:17;;-1:-1:-1;;2406:17:27;-1:-1:-1;;;;;2406:17:27;;;;;;;;;;2205:225::o;1274:134:30:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:30:o;2773:1095:48:-;3368:27;-1:-1:-1;;;;;3368:25:48;;;:27::i;:::-;3360:71;;;;;-1:-1:-1;;;;;3360:71:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;3502:12;3516:23;3551:5;-1:-1:-1;;;;;3543:19:48;3563:4;3543:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3543:25:48;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3501:67:48;;;;3586:7;3578:52;;;;;-1:-1:-1;;;;;3578:52:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:17;;:21;3641:221;;3785:10;3774:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3774:30:48;3766:85;;;;-1:-1:-1;;;;;3766:85:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:176:30;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:30;;;;;;;;;;;;;;;;;;;;;;;;;;;1692:187;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;;;1797:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:30;;;1692:187::o;663:805:49:-;723:4;1379:20;;1224:66;1418:15;;;;;:42;;;1449:11;1437:8;:23;;1418:42;1410:51;663:805;-1:-1:-1;;;;663:805:49:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../lib/util/Constants.sol\";\nimport \"../lib/token/IERC20.sol\";\nimport \"./EscrowBase.sol\";\nimport \"./IssuanceEscrowInterface.sol\";\n\n/**\n * @title Issuance Escrow that keeps assets that are locked by issuance.\n */\ncontract IssuanceEscrow is EscrowBase, IssuanceEscrowInterface {\n\n    /**\n     * @dev Transfers the ownership of ETH in this escrow.\n     * @param source The account where the tokens are from.\n     * @param dest The account where the tokens are transferred to.\n     * @param amount The amount to trasfer.\n     */\n    function transfer(address source, address dest, uint256 amount) public onlyOwner {\n        transferToken(source, dest, Constants.getEthAddress(), amount);\n    }\n\n    /**\n     * @dev Transfers the ownership of ERC20 tokens in this escrow.\n     * @param source The account where the ERC20 tokens are from.\n     * @param dest The account where the ERC20 tokens are transferred to.\n     * @param token The ERC20 tokens to transfer.\n     * @param amount The amount to trasfer.\n     */\n    function transferToken(address source, address dest, address token, uint256 amount) public onlyOwner {\n        require(source != address(0x0), \"IssuanceEscrow: Source must be set.\");\n        require(dest != address(0x0), \"IssuanceEscrow: Dest must be set.\");\n        require(token != address(0x0), \"IssuanceEscrow: Token must be set.\");\n        require(amount > 0, \"IssuanceEscrow: Amount must be set.\");\n        require(getTokenBalance(source, IERC20(token)) >= amount, \"IssuanceEscrow: Insufficient balance.\");\n\n        _migrateBalance(source, dest, token, amount);\n    }\n}",
  "sourcePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrow.sol",
  "ast": {
    "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrow.sol",
    "exportedSymbols": {
      "IssuanceEscrow": [
        1829
      ]
    },
    "id": 1830,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1732,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/util/Constants.sol",
        "file": "../lib/util/Constants.sol",
        "id": 1733,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 19662,
        "src": "25:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/IERC20.sol",
        "file": "../lib/token/IERC20.sol",
        "id": 1734,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 19386,
        "src": "61:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/EscrowBase.sol",
        "file": "./EscrowBase.sol",
        "id": 1735,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 1260,
        "src": "95:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrowInterface.sol",
        "file": "./IssuanceEscrowInterface.sol",
        "id": 1736,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 1856,
        "src": "122:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1737,
              "name": "EscrowBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1259,
              "src": "271:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EscrowBase_$1259",
                "typeString": "contract EscrowBase"
              }
            },
            "id": 1738,
            "nodeType": "InheritanceSpecifier",
            "src": "271:10:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1739,
              "name": "IssuanceEscrowInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1855,
              "src": "283:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IssuanceEscrowInterface_$1855",
                "typeString": "contract IssuanceEscrowInterface"
              }
            },
            "id": 1740,
            "nodeType": "InheritanceSpecifier",
            "src": "283:23:12"
          }
        ],
        "contractDependencies": [
          1259,
          1322,
          1855,
          5766
        ],
        "contractKind": "contract",
        "documentation": "@title Issuance Escrow that keeps assets that are locked by issuance.",
        "fullyImplemented": true,
        "id": 1829,
        "linearizedBaseContracts": [
          1829,
          1855,
          1259,
          5766,
          1322
        ],
        "name": "IssuanceEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1760,
              "nodeType": "Block",
              "src": "642:79:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1752,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "666:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1753,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "674:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1754,
                            "name": "Constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19661,
                            "src": "680:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Constants_$19661_$",
                              "typeString": "type(library Constants)"
                            }
                          },
                          "id": 1755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getEthAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19660,
                          "src": "680:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                            "typeString": "function () pure returns (address)"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "680:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1757,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "707:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1751,
                      "name": "transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1828
                      ],
                      "referencedDeclaration": 1828,
                      "src": "652:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:62:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1759,
                  "nodeType": "ExpressionStatement",
                  "src": "652:62:12"
                }
              ]
            },
            "documentation": "@dev Transfers the ownership of ETH in this escrow.\n@param source The account where the tokens are from.\n@param dest The account where the tokens are transferred to.\n@param amount The amount to trasfer.",
            "id": 1761,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1749,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1748,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5699,
                  "src": "632:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "632:9:12"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "579:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1744,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "595:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1746,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "609:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:46:12"
            },
            "returnParameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:0:12"
            },
            "scope": 1829,
            "src": "561:160:12",
            "stateMutability": "nonpayable",
            "superFunction": 1843,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "1146:472:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1775,
                          "name": "source",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "1164:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1182:3:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1174:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1174:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1164:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20536f75726365206d757374206265207365742e",
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1188:37:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b37d2a241e05a8863f50e81d5dc6ec11c3af100197385d3823989063f81587c",
                          "typeString": "literal_string \"IssuanceEscrow: Source must be set.\""
                        },
                        "value": "IssuanceEscrow: Source must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b37d2a241e05a8863f50e81d5dc6ec11c3af100197385d3823989063f81587c",
                          "typeString": "literal_string \"IssuanceEscrow: Source must be set.\""
                        }
                      ],
                      "id": 1774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1156:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:70:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1784,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1765,
                          "src": "1244:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1260:3:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1252:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1252:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1244:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a2044657374206d757374206265207365742e",
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:35:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672532690b6b946b53852e422c7a65af64eb53e43227821801428e64af758d3c",
                          "typeString": "literal_string \"IssuanceEscrow: Dest must be set.\""
                        },
                        "value": "IssuanceEscrow: Dest must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672532690b6b946b53852e422c7a65af64eb53e43227821801428e64af758d3c",
                          "typeString": "literal_string \"IssuanceEscrow: Dest must be set.\""
                        }
                      ],
                      "id": 1783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1236:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1791,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:66:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1793,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "1320:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1337:3:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1329:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1329:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1320:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20546f6b656e206d757374206265207365742e",
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1343:36:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_732f65c6b0e4ebf4522b56acde0e06d5df9b066362e74f8fcdcd85d3c8782e7b",
                          "typeString": "literal_string \"IssuanceEscrow: Token must be set.\""
                        },
                        "value": "IssuanceEscrow: Token must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_732f65c6b0e4ebf4522b56acde0e06d5df9b066362e74f8fcdcd85d3c8782e7b",
                          "typeString": "literal_string \"IssuanceEscrow: Token must be set.\""
                        }
                      ],
                      "id": 1792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1312:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:68:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:68:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1802,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "1398:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1407:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1398:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20416d6f756e74206d757374206265207365742e",
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:37:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c4bbbaa24abd5325e3c14cfeb70b7ade33bf778db6105f9acb4aecc31b4eb75",
                          "typeString": "literal_string \"IssuanceEscrow: Amount must be set.\""
                        },
                        "value": "IssuanceEscrow: Amount must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c4bbbaa24abd5325e3c14cfeb70b7ade33bf778db6105f9acb4aecc31b4eb75",
                          "typeString": "literal_string \"IssuanceEscrow: Amount must be set.\""
                        }
                      ],
                      "id": 1801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1390:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:58:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1810,
                              "name": "source",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "1482:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1812,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1767,
                                  "src": "1497:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1811,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19385,
                                "src": "1490:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$19385_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1490:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$19385",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$19385",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1809,
                            "name": "getTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              813
                            ],
                            "referencedDeclaration": 813,
                            "src": "1466:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_contract$_IERC20_$19385_$returns$_t_uint256_$",
                              "typeString": "function (address,contract IERC20) view returns (uint256)"
                            }
                          },
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1466:38:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1815,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "1508:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1466:48:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20496e73756666696369656e742062616c616e63652e",
                        "id": 1817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1516:39:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452f4735f08b2f85fba8fba315cd43d6877d18f260d32cba901158473b752f93",
                          "typeString": "literal_string \"IssuanceEscrow: Insufficient balance.\""
                        },
                        "value": "IssuanceEscrow: Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452f4735f08b2f85fba8fba315cd43d6877d18f260d32cba901158473b752f93",
                          "typeString": "literal_string \"IssuanceEscrow: Insufficient balance.\""
                        }
                      ],
                      "id": 1808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1458:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:98:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:98:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1821,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "1583:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1822,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "1591:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1823,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "1597:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1824,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1769,
                        "src": "1604:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1820,
                      "name": "_migrateBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "1567:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1826,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:44:12"
                }
              ]
            },
            "documentation": "@dev Transfers the ownership of ERC20 tokens in this escrow.\n@param source The account where the ERC20 tokens are from.\n@param dest The account where the ERC20 tokens are transferred to.\n@param token The ERC20 tokens to transfer.\n@param amount The amount to trasfer.",
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5699,
                  "src": "1136:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1136:9:12"
              }
            ],
            "name": "transferToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1068:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1765,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1084:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1767,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1098:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1769,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1113:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:61:12"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:12"
            },
            "scope": 1829,
            "src": "1045:573:12",
            "stateMutability": "nonpayable",
            "superFunction": 1854,
            "visibility": "public"
          }
        ],
        "scope": 1830,
        "src": "244:1376:12"
      }
    ],
    "src": "0:1620:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrow.sol",
    "exportedSymbols": {
      "IssuanceEscrow": [
        1829
      ]
    },
    "id": 1830,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1732,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/util/Constants.sol",
        "file": "../lib/util/Constants.sol",
        "id": 1733,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 19662,
        "src": "25:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/lib/token/IERC20.sol",
        "file": "../lib/token/IERC20.sol",
        "id": 1734,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 19386,
        "src": "61:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/EscrowBase.sol",
        "file": "./EscrowBase.sol",
        "id": 1735,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 1260,
        "src": "95:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shengdading/git/nuts-platform-v2/contracts/escrow/IssuanceEscrowInterface.sol",
        "file": "./IssuanceEscrowInterface.sol",
        "id": 1736,
        "nodeType": "ImportDirective",
        "scope": 1830,
        "sourceUnit": 1856,
        "src": "122:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1737,
              "name": "EscrowBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1259,
              "src": "271:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EscrowBase_$1259",
                "typeString": "contract EscrowBase"
              }
            },
            "id": 1738,
            "nodeType": "InheritanceSpecifier",
            "src": "271:10:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1739,
              "name": "IssuanceEscrowInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1855,
              "src": "283:23:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IssuanceEscrowInterface_$1855",
                "typeString": "contract IssuanceEscrowInterface"
              }
            },
            "id": 1740,
            "nodeType": "InheritanceSpecifier",
            "src": "283:23:12"
          }
        ],
        "contractDependencies": [
          1259,
          1322,
          1855,
          5766
        ],
        "contractKind": "contract",
        "documentation": "@title Issuance Escrow that keeps assets that are locked by issuance.",
        "fullyImplemented": true,
        "id": 1829,
        "linearizedBaseContracts": [
          1829,
          1855,
          1259,
          5766,
          1322
        ],
        "name": "IssuanceEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1760,
              "nodeType": "Block",
              "src": "642:79:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1752,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "666:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1753,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "674:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1754,
                            "name": "Constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19661,
                            "src": "680:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Constants_$19661_$",
                              "typeString": "type(library Constants)"
                            }
                          },
                          "id": 1755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getEthAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19660,
                          "src": "680:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                            "typeString": "function () pure returns (address)"
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "680:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1757,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "707:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1751,
                      "name": "transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1828
                      ],
                      "referencedDeclaration": 1828,
                      "src": "652:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:62:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1759,
                  "nodeType": "ExpressionStatement",
                  "src": "652:62:12"
                }
              ]
            },
            "documentation": "@dev Transfers the ownership of ETH in this escrow.\n@param source The account where the tokens are from.\n@param dest The account where the tokens are transferred to.\n@param amount The amount to trasfer.",
            "id": 1761,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1749,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1748,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5699,
                  "src": "632:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "632:9:12"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "579:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1744,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "595:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1746,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "609:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:46:12"
            },
            "returnParameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:0:12"
            },
            "scope": 1829,
            "src": "561:160:12",
            "stateMutability": "nonpayable",
            "superFunction": 1843,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "1146:472:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1775,
                          "name": "source",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "1164:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1182:3:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1174:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1174:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1164:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20536f75726365206d757374206265207365742e",
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1188:37:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b37d2a241e05a8863f50e81d5dc6ec11c3af100197385d3823989063f81587c",
                          "typeString": "literal_string \"IssuanceEscrow: Source must be set.\""
                        },
                        "value": "IssuanceEscrow: Source must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b37d2a241e05a8863f50e81d5dc6ec11c3af100197385d3823989063f81587c",
                          "typeString": "literal_string \"IssuanceEscrow: Source must be set.\""
                        }
                      ],
                      "id": 1774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1156:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:70:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:70:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1784,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1765,
                          "src": "1244:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1260:3:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1252:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1252:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1244:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a2044657374206d757374206265207365742e",
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:35:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672532690b6b946b53852e422c7a65af64eb53e43227821801428e64af758d3c",
                          "typeString": "literal_string \"IssuanceEscrow: Dest must be set.\""
                        },
                        "value": "IssuanceEscrow: Dest must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672532690b6b946b53852e422c7a65af64eb53e43227821801428e64af758d3c",
                          "typeString": "literal_string \"IssuanceEscrow: Dest must be set.\""
                        }
                      ],
                      "id": 1783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1236:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1791,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:66:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1793,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1767,
                          "src": "1320:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1337:3:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1329:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1329:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1320:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20546f6b656e206d757374206265207365742e",
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1343:36:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_732f65c6b0e4ebf4522b56acde0e06d5df9b066362e74f8fcdcd85d3c8782e7b",
                          "typeString": "literal_string \"IssuanceEscrow: Token must be set.\""
                        },
                        "value": "IssuanceEscrow: Token must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_732f65c6b0e4ebf4522b56acde0e06d5df9b066362e74f8fcdcd85d3c8782e7b",
                          "typeString": "literal_string \"IssuanceEscrow: Token must be set.\""
                        }
                      ],
                      "id": 1792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1312:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:68:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:68:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1802,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "1398:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1407:1:12",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1398:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20416d6f756e74206d757374206265207365742e",
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:37:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c4bbbaa24abd5325e3c14cfeb70b7ade33bf778db6105f9acb4aecc31b4eb75",
                          "typeString": "literal_string \"IssuanceEscrow: Amount must be set.\""
                        },
                        "value": "IssuanceEscrow: Amount must be set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c4bbbaa24abd5325e3c14cfeb70b7ade33bf778db6105f9acb4aecc31b4eb75",
                          "typeString": "literal_string \"IssuanceEscrow: Amount must be set.\""
                        }
                      ],
                      "id": 1801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1390:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:58:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1810,
                              "name": "source",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "1482:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1812,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1767,
                                  "src": "1497:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1811,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19385,
                                "src": "1490:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$19385_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1490:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$19385",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$19385",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1809,
                            "name": "getTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              813
                            ],
                            "referencedDeclaration": 813,
                            "src": "1466:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_contract$_IERC20_$19385_$returns$_t_uint256_$",
                              "typeString": "function (address,contract IERC20) view returns (uint256)"
                            }
                          },
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1466:38:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1815,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "1508:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1466:48:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e6365457363726f773a20496e73756666696369656e742062616c616e63652e",
                        "id": 1817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1516:39:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452f4735f08b2f85fba8fba315cd43d6877d18f260d32cba901158473b752f93",
                          "typeString": "literal_string \"IssuanceEscrow: Insufficient balance.\""
                        },
                        "value": "IssuanceEscrow: Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452f4735f08b2f85fba8fba315cd43d6877d18f260d32cba901158473b752f93",
                          "typeString": "literal_string \"IssuanceEscrow: Insufficient balance.\""
                        }
                      ],
                      "id": 1808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21069,
                        21070
                      ],
                      "referencedDeclaration": 21070,
                      "src": "1458:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:98:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:98:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1821,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "1583:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1822,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "1591:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1823,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "1597:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1824,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1769,
                        "src": "1604:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1820,
                      "name": "_migrateBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "1567:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1826,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:44:12"
                }
              ]
            },
            "documentation": "@dev Transfers the ownership of ERC20 tokens in this escrow.\n@param source The account where the ERC20 tokens are from.\n@param dest The account where the ERC20 tokens are transferred to.\n@param token The ERC20 tokens to transfer.\n@param amount The amount to trasfer.",
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5699,
                  "src": "1136:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1136:9:12"
              }
            ],
            "name": "transferToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1068:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1765,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1084:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1767,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1098:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1769,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "1113:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:61:12"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:12"
            },
            "scope": 1829,
            "src": "1045:573:12",
            "stateMutability": "nonpayable",
            "superFunction": 1854,
            "visibility": "public"
          }
        ],
        "scope": 1830,
        "src": "244:1376:12"
      }
    ],
    "src": "0:1620:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-09T22:59:45.986Z",
  "devdoc": {
    "methods": {
      "depositByAdmin(address)": {
        "details": "Deposits ETH from Instrument Manager into an account.",
        "params": {
          "account": "The account to deposit ETH."
        }
      },
      "depositTokenByAdmin(address,address,uint256)": {
        "details": "Deposits ERC20 tokens from Instrument Manager into an account. Note: The owner, i.e. Instrument Manager must set the allowance before hand.",
        "params": {
          "account": "The account to deposit ERC20 tokens.",
          "amount": "The amount of ERC20 token to deposit.",
          "token": "The ERC20 token to deposit."
        }
      },
      "getBalance(address)": {
        "details": "Get the current ETH balance of an account in the escrow.",
        "params": {
          "account": "The account to check ETH balance."
        },
        "return": "Current ETH balance of the account."
      },
      "getTokenBalance(address,address)": {
        "details": "Get the balance of the requested IERC20 token in the escrow.",
        "params": {
          "account": "The address to check IERC20 balance.",
          "token": "The IERC20 token to check balance."
        },
        "return": "The balance of the account."
      },
      "getTokenList(address)": {
        "details": "Get the list of tokens that are deposited in the escrow.",
        "params": {
          "account": "The address to check the deposited token list."
        },
        "return": "The list of tokens deposited in the escrow."
      },
      "initialize(address)": {
        "details": "IMPORTANT: Initialization method for all escrows to update the owner. This function must be invoked immediately after creating the proxy and updating implementation. If it's invoked in a separate transaction, it's possible that it's already invoked by someone else."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transfer(address,address,uint256)": {
        "details": "Transfers the ownership of ETH in this escrow.",
        "params": {
          "amount": "The amount to trasfer.",
          "dest": "The account where the tokens are transferred to.",
          "source": "The account where the tokens are from."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferToken(address,address,address,uint256)": {
        "details": "Transfers the ownership of ERC20 tokens in this escrow.",
        "params": {
          "amount": "The amount to trasfer.",
          "dest": "The account where the ERC20 tokens are transferred to.",
          "source": "The account where the ERC20 tokens are from.",
          "token": "The ERC20 tokens to transfer."
        }
      },
      "withdrawByAdmin(address,uint256)": {
        "details": "Withdraw ETH from an account to Instrument Manager.",
        "params": {
          "account": "The account to withdraw ETH.",
          "amount": "The amount of ETH to withdraw."
        }
      },
      "withdrawTokenByAdmin(address,address,uint256)": {
        "details": "Withdraw ERC20 token from an account to Instrument Manager. The transfer action is done inside this function.",
        "params": {
          "account": "The account to withdraw ERC20 token.",
          "amount": "The amount of ERC20 tokens to withdraw.",
          "token": "The ERC20 token to withdraw."
        }
      }
    },
    "title": "Issuance Escrow that keeps assets that are locked by issuance."
  },
  "userdoc": {
    "methods": {}
  }
}